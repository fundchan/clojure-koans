; This is the Calva REPL Window.
; It's just a file, really, with some special treatment from Calva.
; Use it as a REPL input prompt if you like. (When the REPL is connected.)
; TIPS: The keyboard shortcut `ctrl+alt+o r` shows and focuses this window
; Please see https://calva.io/repl-window/ for more info.
; Happy coding! ♥️

; TIPS: As with any Clojure file when the REPL is connected:
; - `alt+enter` evaluates the current top level form.
; - `ctrl+enter` evaluates the current form.
; Special for this file:
; - `alt+up` and `alt+down` traverse up and down the REPL command history
;    when the cursor is after the last contents at the prompt
; 
; See also the Calva Inspector: https://calva.io/inspector/

PLEASE NOTE
We will update the default location of this file.
The new default location will be
  "<projectRootPath>/.calva/repl.calva-repl"
For now the legacy path is used by default.
To give yourself a smooth transition, you can opt in
to the change, by configuring this setting as false:
  "calva.useLegacyReplWindowPath"
and then add "**/.calva/repl.calva-repl" to your ".gitignore" file.


This file is configured as the output destination for all REPL output.
You can configure this with the setting:
  "calva.outputDestinations"


; Connecting ...
; Reading port file: file:///home/study/clojure-koans/.nrepl-port ...
; Using host:port localhost:44107 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉koan-engine.runner꞉> 
"Please see https://calva.io/output/#about-stdout-in-the-repl-window
about why stdout printed to this file is prepended with `;` to be line comments."
clj꞉koan-engine.runner꞉> (exec "run")
; Starting auto-runner...
; nREPL Connection was closed
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Connecting ...
; Reading port file: file:///home/study/clojure-koans/.nrepl-port ...
; Using host:port localhost:44107 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉koan-engine.runner꞉> 
; nREPL Connection was closed
; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 

; Starting Jack-in: (cd /home/study/clojure-koans; lein update-in :dependencies conj '[nrepl,"1.3.1"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.55.4"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- with-profile +dev repl :headless)
; Using host:port 127.0.0.1:44717 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉koan-engine.runner꞉> 
; Jack-in done.
clj꞉koan-engine.runner꞉> 
; Execution error (ExceptionInfo) at koans.01-equalities/eval10598 (REPL:4).
; To understand reality, we must compare our expectations against reality
; (= __ (+ 1 1))
clj꞉koans.01-equalities꞉> 
; Execution error (ExceptionInfo) at koans.01-equalities/eval10641 (REPL:4).
; To understand reality, we must compare our expectations against reality
; (= __ (+ 1 1))
clj꞉koans.01-equalities꞉> (= true true)
true
clj꞉koans.01-equalities꞉> 
true
clj꞉koans.01-equalities꞉> 
2
clj꞉koans.01-equalities꞉> 
true
clj꞉koans.01-equalities꞉> 
true
clj꞉koans.01-equalities꞉> 
true
clj꞉koans.01-equalities꞉> 
